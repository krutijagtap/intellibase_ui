sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/m/StandardListItem","sap/m/MessageBox"],function(t,e,n,o,s,i){"use strict";return t.extend("intellibaseui.controller.MainView",{onInit:async function(){this._oODataModel=this.getOwnerComponent().getModel();this._oCategoryModel=new e;this._oProductModel=new e;this.getView().setModel(this._oCategoryModel,"categoriesModel");this.getView().setModel(this._oProductModel,"productsModel");this._oCategorySelect=this.byId("categorySelect");this._oProductSelect=this.byId("productSelect");this._oPromptList=this.byId("promptList");await this.loadCategories();await this.loadProducts();this.loadPrompts("All Categories","All Products")},onAfterRendering:function(){const t=this.byId("editablePrompt");if(t){t.setEditorSettings({menubar:false,toolbar:false,statusbar:false,branding:false,content_style:`\n                @font-face {\n                    font-family: 'SCProsperSans';\n                    src: url('../fonts/SCProsperSans-Regular.woff2') format('woff2'),\n                         url('../fonts/SCProsperSans-Regular.ttf') format('truetype');\n                    font-weight: 400;\n                    font-style: normal;\n                }\n                body {\n                    font-family: 'SCProsperSans', Arial, Helvetica, sans-serif !important;\n                    font-size: 14px !important;\n                    color: #525355 !important;\n                }\n                span, sup {\n                    font-family: inherit !important;\n                }\n            `})}},loadCategories:async function(){const t=this._oODataModel.bindContext("/DistinctCategories(...)");await t.execute();const n=t.getBoundContext().getObject();const o=n.value||[];o.unshift({category:"All Categories"});const s=new e(o);this.getView().setModel(s,"categories")},loadProducts:async function(t){const n=this._oODataModel.bindContext("/DistinctProducts(...)");await n.execute();const o=n.getBoundContext().getObject();const s=o.value||[];s.unshift({product:"All Products"});const i=new e(s);this.getView().setModel(i,"products")},loadPrompts:function(t,e){const i=[];if(t&&t!=="All Categories"){i.push(new n("category",o.EQ,t))}if(e&&e!=="All Products"){i.push(new n("product",o.EQ,e))}const r=this._oPromptList.getBinding("items");if(r){r.filter(i)}else{this._oPromptList.bindItems({path:"/PromptsData",template:new s({title:"{prompt}",description:"{description}"}),filters:i})}},onCategoryChange:function(t){const e=t.getParameter("selectedItem")?.getKey();const n=this._oProductSelect.getSelectedKey();this.loadPrompts(e,n)},onProductChange:function(t){const e=t.getParameter("selectedItem")?.getKey();const n=this._oCategorySelect.getSelectedKey();this.loadPrompts(n,e)},onSelectPrompt:async function(t){this.byId("legendSection").setContent("");const e=t.getParameter("listItem").getBindingContext();const n=e.getObject();const o=n.prompt;const s=this.getView().getModel();const i=s.bindContext("/getPrompt(...)");i.setParameter("prompt",o);try{await i.execute();const t=i.getBoundContext().getObject();const e=Object.entries(t).filter(([t,e])=>t.startsWith("key")&&e);const n=e.map(([e,n],o)=>({value:n,description:t[e.replace("key","sel")],number:o+1}));const s=this.highlightKeywords(o,n);this.byId("editablePrompt").setValue(s);const r=["#0070f2","#00b050","#ffb100","#d62d20","#a200ff"];const a=n.filter(t=>t.description).map((t,e)=>{const n=r[e%r.length];return`\n                    <div style="margin-bottom:6px; display:flex; align-items:center;">\n                        <span style="\n                            display:inline-block;\n                            background-color:${n};\n                            color:white;\n                            font-weight:bold;\n                            border-radius:4px;\n                            padding:2px 6px;\n                            margin-right:8px;\n                            font-size:0.9rem;\n                        ">${t.number}<sup></sup></span>\n                        <span style="font-size:0.9rem; color:#32363a;">\n                            ${t.description}\n                        </span>\n                    </div>\n                `}).join("");this.byId("legendSection").setContent(a)}catch(t){console.error("Error executing getPrompt:",t)}},highlightKeywords:function(t,e){if(!t||!e||e.length===0)return t;const n=["#0070f2","#00b050","#ffb100","#d62d20","#a200ff"];let o=t;e.forEach((t,e)=>{const s=t.value;if(!s)return;const i=s.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");const r=new RegExp(`\\b(${i})\\b`,"gi");o=o.replace(r,()=>{const o=n[e%n.length];return`<span style="background-color:${o};color:white;padding:2px 4px;border-radius:4px;">${s}<sup>${t.number}</sup></span>`})});return o},onSearchLive:function(){const t=this._oCategorySelect.getSelectedKey();const e=this._oProductSelect.getSelectedKey();this.loadPrompts(t,e)},onPressButton:async function(){var t=`<p style="color:gray;"><em>âœ¨ Generated by FinSight.Intelligence. Please review before use.</em></p>\n\n<h3>Short Answer:</h3>\nThe total Risk-Weighted Assets (RWA) amount to $57.73B.\n\n<h3>Long Answer:</h3>\n\n<h4>Analysis Steps:</h4>\n<ul>\n    <li>Identified GLB_RWA as the target measure for calculation</li>\n    <li>Performed SUM aggregation on GLB_RWA column</li>\n    <li>Formatted the result in billions (B) for better readability</li>\n</ul>\n\n<table style="border-collapse: collapse; width: 100%; border: 1px solid #ddd;">\n    <thead>\n        <tr style="background-color: #f2f2f2;">\n            <th style="padding: 8px; text-align: left; border: 1px solid #ddd;">Measure</th>\n            <th style="padding: 8px; text-align: right; border: 1px solid #ddd;">Value</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td style="padding: 8px; text-align: left; border: 1px solid #ddd;">Total RWA</td>\n            <td style="padding: 8px; text-align: right; border: 1px solid #ddd;">$57,730,482,199.95</td>\n        </tr>\n    </tbody>\n</table>`;this.byId("htmlContent").setContent(t)}})});
//# sourceMappingURL=MainView.controller.js.map